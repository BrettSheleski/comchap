#!/usr/bin/env bash

function echoError {
  echo "$1" 1>&3 2>&4
}

function unsetLdLibraryPath {
  #LD_LIBRARY_PATH is set and will mess up ffmpeg, unset it, then re-set it when done
  ldPath=${LD_LIBRARY_PATH}
  unset LD_LIBRARY_PATH
}

function printUsage {
  local exename=$(basename "$0")

  echo "Add chapters to video file using EDL file"
  echo "     (If no EDL file is found, comskip will be used to generate one)"
  echo ""
  echo "Usage: $exename [OPTIONS] infile [outfile]"
}

function readCommandLineArguments {

  while [[ $# -gt 0 ]]
  do
  local key="$1"
  case $key in
      --keep-edl)
      deleteedl=false
      shift
      ;;
      --keep-meta)
      deletemeta=false
      shift
      ;;
      --verbose)
      verbose=true
      shift
      ;;
      --ffmpeg=*)
      ffmpegPath="${key#*=}"
      shift
      ;;
      --comskip=*)
      comskipPath="${key#*=}"
      shift
      ;;
      --comskip-ini=*)
      comskipini="${key#*=}"
      shift
      ;;
      --lockfile=*)
      lockfile="${key#*=}"
      shift
      ;;
      
      --*)
      echo "unknown argument: $key"
      exitcode=-1
      printUsage
      exit $exitcode
      ;;

      *)
      infile="$key"
      shift
      if [[ -z $1 ]]; then
        outfile=$infile
      else
        outfile="$1"
      fi
      break
      ;;
  esac
  done
}

function setupVerbose {
  # Setup for verbose
  exec 3>&1
  exec 4>&2

  if ! $verbose; then
    exec 1>/dev/null
    exec 2>/dev/null
  fi
}


function checkLockfile {
  if [ ! -z "$lockfile" ]; then

    echo "lockfile: $lockfile"
    while [[ -f "$lockfile" ]]; do
      echo "Waiting"
      sleep 5
    done

    touch "$lockfile"
  fi
}

function prepareComskipIniFile {
  if [ ! -f "$comskipini" ]; then
    echo "output_edl=1" > "$comskipini"
  elif ! grep -q "output_edl=1" "$comskipini"; then
    echo "output_edl=1" >> "$comskipini"
  fi
}

function deleteLockfile {
  if [ ! -z "$lockfile" ]; then
      rm "$lockfile"
    fi
}

function runComskip {

  echo $comskipPath --ini="$comskipini" "$infile"
  $comskipPath --ini="$comskipini" "$infile"

  if [ ! -f "$edlfile" ] ; then
    echo "EDL FILE: $edlfile"
    echo "Error running comskip. EDL File not found."  1>&3 2>&4

    deleteLockfile;

    exit $exitcode
  fi
}

function writeMetadataFile {
  local start=0
  local i=0
  local startnext=start
  hascommercials=false

  echo ";FFMETADATA1"
  # Reads in from $edlfile, see end of loop.
  while IFS=$'\t' read -r -a line
  do
    ((i++))

    end="${line[0]}"
    startnext="${line[1]}"
    hascommercials=true

    echo [CHAPTER]
    echo TIMEBASE=1/1000
    echo START=`echo "$start * 1000" | bc| awk '{printf "%i", $0}'`
    echo END=`echo "$end * 1000" | bc | awk '{printf "%i", $0}'`
    echo "title=Chapter $i"

    echo [CHAPTER]
    echo TIMEBASE=1/1000
    echo START=`echo "$end * 1000" | bc | awk '{printf "%i", $0}'`
    echo END=`echo "$startnext * 1000" | bc | awk '{printf "%i", $0}'`
    echo "title=Commercial $i"

    start=$startnext
  done < "$edlfile"

  if $hascommercials ; then
    end=`$ffmpegPath -i "$infile" 2>&1 | grep Duration | awk '{print $2}' | tr -d , | awk -F: '{ print ($1 * 3600) + ($2 * 60) + $3 }'`
    ((i++))
    echo [CHAPTER]
    echo TIMEBASE=1/1000
    echo START=`echo "$start * 1000" | bc| awk '{printf "%i", $0}'`
    echo END=`echo "$end * 1000" | bc | awk '{printf "%i", $0}'`
    echo "title=Chapter $i"
  fi
}

function cleanupFiles {
  if $deleteedl ; then
    if [ -f "$edlfile" ] ; then
      rm "$edlfile";
    fi
  fi

  if $deletemeta ; then
    if [ -f "$metafile" ]; then
      rm "$metafile";
    fi
  fi

  if $deletelog ; then
    if [ -f "$logfile" ]; then
      rm "$logfile";
    fi
  fi

  if $deletelogo ; then
    if [ -f "$logofile" ]; then
      rm "$logofile";
    fi
  fi

  if $deletetxt ; then
    if [ -f "$txtfile" ]; then
      rm "$txtfile";
    fi
  fi

}

function resetLdLibraryPath {
  if [ ! -z $ldPath ] ; then
    #re-set LD_LIBRARY_PATH
    export LD_LIBRARY_PATH="$ldPath"
  fi
}
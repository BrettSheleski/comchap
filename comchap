#!/usr/bin/env bash

exitcode=0

ffmpegPath="ffmpeg"
comskipPath="comskip"

comskipini=$HOME/.comskip.ini

deleteedl=false
deletemeta=true
deletelog=true
deletelogo=true
deletetxt=true
verbose=false
lockfile=""

infile=$1

if [[ -z "$2" ]]; then
  outfile="$infile"
else
  outfile="$2"
fi

source libcomchap

if [[ $# -lt 1 ]]; then
  printUsage
  exit $exitcode;
fi

readCommandLineArguments  $@

if [ ! -f $infile ]; then
  echoError "$infile does not exist"
  cleanupFiles
  exit $exitcode
fi

edlfile="${infile%.*}.edl"
metafile="${infile%.*}.ffmeta"
logfile="${infile%.*}.log"
logofile="${infile%.*}.logo.txt"
txtfile="${infile%.*}.txt"

outdir=$(dirname "$outfile")
outextension="${outfile##*.}"

unsetLdLibraryPath;
setupVerbose;

checkLockfile;

prepareComskipIniFile;

if [ ! -f "$edlfile" ]; then
  deleteedl=true
  runComskip
fi

writeMetadataFile >> "$metafile";

if $hascommercials ; then
  if [ "$infile" -ef "$outfile" ] ; then

    tempfile=`mktemp --suffix=."$outextension" "$outdir"/XXXXXXXX`

    echo Writing file to temporary location: "$tempfile"
    if $ffmpegPath -loglevel error -hide_banner -nostdin -i "$infile" -i "$metafile" -map_metadata 1 -codec copy -y "$tempfile" 1>&3 2>&4; then
      mv -f "$tempfile" "$outfile"
      echo Saved to: "$outfile"
    else
      echoError "Error running ffmpeg."
      exitcode=-1
    fi
  else
    if $ffmpegPath -loglevel error -hide_banner -nostdin -i "$infile" -i "$metafile" -map_metadata 1 -codec copy -y "$outfile" 1>&3 2>&4; then
      echo Saved to: "$outfile"
    else
      echoError "Error running ffmpeg."
      exitcode=-1
    fi
  fi

  if [ ! -f "$outfile" ]; then
    echoError "Error, $outfile does not exist."
    exitcode=-1
  fi
else
  echoError "No commercials found."
fi

cleanupFiles;

resetLdLibraryPath;

deleteLockfile;

exit $exitcode